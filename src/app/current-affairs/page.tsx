"use client";
import React, { useState, useEffect } from "react";
import { getAuth, onAuthStateChanged, User } from "firebase/auth";
import { useRouter } from "next/navigation";
import { FiCalendar, FiClock, FiExternalLink, FiRefreshCw } from "react-icons/fi";

interface CurrentAffairsItem {
  title: string;
  date: string;
  category: string;
  summary?: string;
  link?: string;
}

export default function CurrentAffairsPage() {
  const [user, setUser] = useState<User | null>(null);
  const [loading, setLoading] = useState(true);
  const [currentAffairs, setCurrentAffairs] = useState<CurrentAffairsItem[]>([]);
  const [selectedCategory, setSelectedCategory] = useState<string>("all");
  const [selectedDate, setSelectedDate] = useState<string>("");
  const router = useRouter();

  // Auth check
  useEffect(() => {
    const auth = getAuth();
    const unsubscribe = onAuthStateChanged(auth, (firebaseUser) => {
      if (!firebaseUser) {
        router.replace("/login");
      } else {
        setUser(firebaseUser);
      }
    });
    return () => unsubscribe();
  }, [router]);

  // Fetch current affairs data
  useEffect(() => {
    const fetchCurrentAffairs = async () => {
      setLoading(true);
      try {
        // Simulated data based on NEXT IAS structure
        // In a real implementation, you would scrape the actual website
        const mockData: CurrentAffairsItem[] = [
          {
            title: "‡§≠‡§æ‡§∞‡§§-‡§®‡•á‡§™‡§æ‡§≤ ‡§∏‡•Ä‡§Æ‡§æ ‡§µ‡§ø‡§µ‡§æ‡§¶: ‡§®‡§à ‡§µ‡§ø‡§ï‡§æ‡§∏",
            date: "2024-01-15",
            category: "International Relations",
            summary: "‡§≠‡§æ‡§∞‡§§ ‡§î‡§∞ ‡§®‡•á‡§™‡§æ‡§≤ ‡§ï‡•á ‡§¨‡•Ä‡§ö ‡§∏‡•Ä‡§Æ‡§æ ‡§µ‡§ø‡§µ‡§æ‡§¶ ‡§™‡§∞ ‡§®‡§à ‡§µ‡§æ‡§∞‡•ç‡§§‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•Å‡§à‡•§ ‡§¶‡•ã‡§®‡•ã‡§Ç ‡§¶‡•á‡§∂‡•ã‡§Ç ‡§®‡•á ‡§∂‡§æ‡§Ç‡§§‡§ø‡§™‡•Ç‡§∞‡•ç‡§£ ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡•ç‡§∞‡§§‡§ø‡§¨‡§¶‡•ç‡§ß‡§§‡§æ ‡§ú‡§§‡§æ‡§à‡•§"
          },
          {
            title: "‡§ï‡•É‡§∑‡§ø ‡§ï‡§æ‡§®‡•Ç‡§®‡•ã‡§Ç ‡§ï‡§æ ‡§®‡§Ø‡§æ ‡§∏‡§Ç‡§∂‡•ã‡§ß‡§®",
            date: "2024-01-14",
            category: "Agriculture",
            summary: "‡§∏‡§∞‡§ï‡§æ‡§∞ ‡§®‡•á ‡§ï‡•É‡§∑‡§ø ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞ ‡§Æ‡•á‡§Ç ‡§®‡§è ‡§∏‡•Å‡§ß‡§æ‡§∞‡•ã‡§Ç ‡§ï‡•Ä ‡§ò‡•ã‡§∑‡§£‡§æ ‡§ï‡•Ä‡•§ ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•ã ‡§¨‡•á‡§π‡§§‡§∞ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§à ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç‡•§"
          },
          {
            title: "‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§≠‡§æ‡§∞‡§§ ‡§Æ‡§ø‡§∂‡§® ‡§ï‡§æ ‡§µ‡§ø‡§∏‡•ç‡§§‡§æ‡§∞",
            date: "2024-01-13",
            category: "Technology",
            summary: "‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§≠‡§æ‡§∞‡§§ ‡§Æ‡§ø‡§∂‡§® ‡§ï‡•á ‡§§‡§π‡§§ ‡§®‡§à ‡§§‡§ï‡§®‡•Ä‡§ï‡•Ä ‡§™‡§π‡§≤ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡•Ä ‡§ó‡§à‡•§ ‡§ó‡•ç‡§∞‡§æ‡§Æ‡•Ä‡§£ ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§á‡§Ç‡§ü‡§∞‡§®‡•á‡§ü ‡§™‡§π‡•Å‡§Ç‡§ö ‡§¨‡§¢‡§º‡§æ‡§®‡•á ‡§™‡§∞ ‡§ú‡•ã‡§∞‡•§"
          },
          {
            title: "‡§™‡§∞‡•ç‡§Ø‡§æ‡§µ‡§∞‡§£ ‡§∏‡§Ç‡§∞‡§ï‡•ç‡§∑‡§£ ‡§®‡§à ‡§®‡•Ä‡§§‡§ø",
            date: "2024-01-12",
            category: "Environment",
            summary: "‡§ú‡§≤‡§µ‡§æ‡§Ø‡•Å ‡§™‡§∞‡§ø‡§µ‡§∞‡•ç‡§§‡§® ‡§∏‡•á ‡§®‡§ø‡§™‡§ü‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§à ‡§™‡§∞‡•ç‡§Ø‡§æ‡§µ‡§∞‡§£ ‡§®‡•Ä‡§§‡§ø ‡§≤‡§æ‡§ó‡•Ç‡•§ ‡§ï‡§æ‡§∞‡•ç‡§¨‡§® ‡§â‡§§‡•ç‡§∏‡§∞‡•ç‡§ú‡§® ‡§ï‡§Æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§è ‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø‡•§"
          },
          {
            title: "‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞ ‡§Æ‡•á‡§Ç ‡§®‡§à ‡§™‡§π‡§≤",
            date: "2024-01-11",
            category: "Education",
            summary: "‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§®‡•Ä‡§§‡§ø ‡§ï‡•á ‡§§‡§π‡§§ ‡§®‡§à ‡§™‡§π‡§≤ ‡§∂‡•Å‡§∞‡•Ç‡•§ ‡§ó‡•Å‡§£‡§µ‡§§‡•ç‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§∏‡§≠‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡•Å‡§≤‡§≠ ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏‡•§"
          },
          {
            title: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ‡§ì‡§Ç ‡§Æ‡•á‡§Ç ‡§∏‡•Å‡§ß‡§æ‡§∞",
            date: "2024-01-10",
            category: "Health",
            summary: "‡§Ü‡§Ø‡•Å‡§∑‡•ç‡§Æ‡§æ‡§® ‡§≠‡§æ‡§∞‡§§ ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§ï‡§æ ‡§µ‡§ø‡§∏‡•ç‡§§‡§æ‡§∞‡•§ ‡§ó‡•ç‡§∞‡§æ‡§Æ‡•Ä‡§£ ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§Æ‡§ú‡§¨‡•Ç‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§™‡§π‡§≤‡•§"
          }
        ];
        
        setCurrentAffairs(mockData);
      } catch (error) {
        console.error("Error fetching current affairs:", error);
      } finally {
        setLoading(false);
      }
    };

    fetchCurrentAffairs();
  }, []);

  // Filter current affairs based on category and date
  const filteredAffairs = currentAffairs.filter(item => {
    const categoryMatch = selectedCategory === "all" || item.category === selectedCategory;
    const dateMatch = !selectedDate || item.date === selectedDate;
    return categoryMatch && dateMatch;
  });

  // Get unique categories
  const categories = ["all", ...Array.from(new Set(currentAffairs.map(item => item.category)))];

  // Get unique dates
  const dates = Array.from(new Set(currentAffairs.map(item => item.date))).sort().reverse();

  if (!user) return null;

  return (
    <div className="max-w-7xl mx-auto py-8 px-4">
      {/* Header */}
      <div className="mb-8 animate-fade-in">
        <div className="text-center mb-6">
          <h1 className="text-4xl md:text-5xl font-bold gradient-text mb-4">
            üì∞ ‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§Æ‡§æ‡§Æ‡§≤‡•á
          </h1>
          <p className="text-xl text-gray-300">
            UPSC ‡§™‡§∞‡•Ä‡§ï‡•ç‡§∑‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§Æ‡§æ‡§Æ‡§≤‡•ã‡§Ç ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä
          </p>
        </div>
      </div>

      {/* Filters */}
      <div className="modern-card rounded-2xl p-6 mb-8 animate-fade-in-up">
        <div className="flex flex-wrap gap-4 items-center">
          <div className="flex items-center gap-2">
            <FiCalendar className="text-blue-400" />
            <label htmlFor="date-filter" className="sr-only">‡§§‡§ø‡§•‡§ø ‡§´‡§ø‡§≤‡•ç‡§ü‡§∞</label>
            <select
              id="date-filter"
              value={selectedDate}
              onChange={(e) => setSelectedDate(e.target.value)}
              className="bg-gray-800 border border-gray-600 rounded-lg px-3 py-2 text-white focus:outline-none focus:border-blue-400"
              aria-label="‡§§‡§ø‡§•‡§ø ‡§´‡§ø‡§≤‡•ç‡§ü‡§∞"
            >
              <option value="">‡§∏‡§≠‡•Ä ‡§§‡§ø‡§•‡§ø‡§Ø‡§æ‡§Ç</option>
              {dates.map(date => (
                <option key={date} value={date}>
                  {new Date(date).toLocaleDateString('hi-IN')}
                </option>
              ))}
            </select>
          </div>
          
          <div className="flex items-center gap-2">
            <FiClock className="text-green-400" />
            <label htmlFor="category-filter" className="sr-only">‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§´‡§ø‡§≤‡•ç‡§ü‡§∞</label>
            <select
              id="category-filter"
              value={selectedCategory}
              onChange={(e) => setSelectedCategory(e.target.value)}
              className="bg-gray-800 border border-gray-600 rounded-lg px-3 py-2 text-white focus:outline-none focus:border-green-400"
              aria-label="‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§´‡§ø‡§≤‡•ç‡§ü‡§∞"
            >
              {categories.map(category => (
                <option key={category} value={category}>
                  {category === "all" ? "‡§∏‡§≠‡•Ä ‡§∂‡•ç‡§∞‡•á‡§£‡§ø‡§Ø‡§æ‡§Ç" : category}
                </option>
              ))}
            </select>
          </div>

          <button
            onClick={() => {
              setSelectedCategory("all");
              setSelectedDate("");
            }}
            className="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg transition-all duration-300 hover:scale-105"
          >
            ‡§´‡§ø‡§≤‡•ç‡§ü‡§∞ ‡§∞‡•Ä‡§∏‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç
          </button>
        </div>
      </div>

      {/* Current Affairs List */}
      {loading ? (
        <div className="text-center py-12">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-400 mx-auto mb-4"></div>
          <p className="text-gray-400">‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§Æ‡§æ‡§Æ‡§≤‡•ã‡§Ç ‡§ï‡•ã ‡§≤‡•ã‡§° ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç...</p>
        </div>
      ) : (
        <div className="grid gap-6">
          {filteredAffairs.length === 0 ? (
            <div className="text-center py-12">
              <div className="text-6xl mb-4">üì≠</div>
              <p className="text-gray-400 text-lg">‡§ï‡•ã‡§à ‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§Æ‡§æ‡§Æ‡§≤‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ</p>
            </div>
          ) : (
            filteredAffairs.map((item, index) => (
              <div key={index} className="modern-card rounded-2xl p-6 animate-fade-in-up" style={{ animationDelay: `${index * 0.1}s` }}>
                <div className="flex flex-col md:flex-row md:items-start gap-4">
                  <div className="flex-1">
                    <div className="flex items-center gap-3 mb-3">
                      <span className="bg-blue-500/20 text-blue-400 px-3 py-1 rounded-full text-sm font-medium">
                        {item.category}
                      </span>
                      <span className="text-gray-400 text-sm">
                        {new Date(item.date).toLocaleDateString('hi-IN')}
                      </span>
                    </div>
                    
                    <h3 className="text-xl font-semibold text-white mb-3">
                      {item.title}
                    </h3>
                    
                    {item.summary && (
                      <p className="text-gray-300 leading-relaxed mb-4">
                        {item.summary}
                      </p>
                    )}
                    
                    <div className="flex items-center gap-4">
                      <button className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-all duration-300 hover:scale-105 flex items-center gap-2">
                        <FiExternalLink />
                        ‡§µ‡§ø‡§∏‡•ç‡§§‡§æ‡§∞ ‡§∏‡•á ‡§™‡§¢‡§º‡•á‡§Ç
                      </button>
                      
                      <button className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg transition-all duration-300 hover:scale-105">
                        ‡§®‡•ã‡§ü‡•ç‡§∏ ‡§¨‡§®‡§æ‡§è‡§Ç
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            ))
          )}
        </div>
      )}

      {/* Source Information */}
      <div className="mt-12 text-center">
        <div className="modern-card rounded-2xl p-6">
          <h3 className="text-lg font-semibold text-gray-300 mb-2">
            üìö ‡§°‡•á‡§ü‡§æ ‡§∏‡•ç‡§∞‡•ã‡§§
          </h3>
          <p className="text-gray-400">
            ‡§Ø‡§π ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä <a href="https://www.nextias.com/daily-current-affairs" target="_blank" rel="noopener noreferrer" className="text-blue-400 hover:underline">NEXT IAS</a> ‡§∏‡•á ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡•Ä ‡§ó‡§à ‡§π‡•à
          </p>
          <p className="text-sm text-gray-500 mt-2">
            ‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à
          </p>
        </div>
      </div>
    </div>
  );
} 